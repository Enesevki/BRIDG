# Generated by Django 5.2 on 2025-05-29 13:07

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("games", "0002_load_initial_genres_tags"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="game",
            name="moderation_status",
            field=models.CharField(
                choices=[
                    ("PENDING_CHECKS", "Waiting for automatic checks"),
                    ("CHECKS_PASSED", "Automatic checks passed"),
                    ("CHECKS_FAILED", "Automatic checks failed"),
                    ("PENDING_REVIEW", "Waiting for manual review"),
                ],
                default="PENDING_CHECKS",
                help_text="The moderation status of the game, indicating its review progress.",
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="game",
            name="created_at",
            field=models.DateTimeField(
                auto_now_add=True,
                help_text="The date and time when the game was created.",
            ),
        ),
        migrations.AlterField(
            model_name="game",
            name="creator",
            field=models.ForeignKey(
                help_text="The user who uploaded or created the game.",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="uploaded_games",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AlterField(
            model_name="game",
            name="description",
            field=models.TextField(
                blank=True,
                help_text="A brief description of the game, providing details about gameplay or features.",
            ),
        ),
        migrations.AlterField(
            model_name="game",
            name="dislikes_count",
            field=models.PositiveIntegerField(
                default=0,
                editable=False,
                help_text="The number of dislikes the game has received.",
            ),
        ),
        migrations.AlterField(
            model_name="game",
            name="entry_point_path",
            field=models.CharField(
                blank=True,
                editable=False,
                help_text="Path to the entry point file within the WebGL build ZIP.",
                max_length=255,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="game",
            name="genres",
            field=models.ManyToManyField(
                blank=True,
                help_text="Genres associated with the game, such as Action or Puzzle.",
                related_name="games",
                to="games.genre",
            ),
        ),
        migrations.AlterField(
            model_name="game",
            name="id",
            field=models.UUIDField(
                default=uuid.uuid4,
                editable=False,
                help_text="Unique identifier for the game, generated automatically.",
                primary_key=True,
                serialize=False,
            ),
        ),
        migrations.AlterField(
            model_name="game",
            name="is_published",
            field=models.BooleanField(
                default=False,
                help_text="Indicates whether the game is publicly visible after admin approval.",
            ),
        ),
        migrations.AlterField(
            model_name="game",
            name="likes_count",
            field=models.PositiveIntegerField(
                default=0,
                editable=False,
                help_text="The number of likes the game has received.",
            ),
        ),
        migrations.AlterField(
            model_name="game",
            name="play_count",
            field=models.PositiveIntegerField(
                default=0,
                editable=False,
                help_text="The number of times the game has been played.",
            ),
        ),
        migrations.AlterField(
            model_name="game",
            name="tags",
            field=models.ManyToManyField(
                blank=True,
                help_text="Tags describing the game, such as Multiplayer or Physics.",
                related_name="games",
                to="games.tag",
            ),
        ),
        migrations.AlterField(
            model_name="game",
            name="thumbnail",
            field=models.ImageField(
                blank=True,
                help_text="Thumbnail image representing the game.",
                null=True,
                upload_to="game_thumbnails/",
            ),
        ),
        migrations.AlterField(
            model_name="game",
            name="title",
            field=models.CharField(
                help_text="The title of the game, displayed to users.", max_length=200
            ),
        ),
        migrations.AlterField(
            model_name="game",
            name="updated_at",
            field=models.DateTimeField(
                auto_now=True,
                help_text="The date and time when the game was last updated.",
            ),
        ),
        migrations.AlterField(
            model_name="game",
            name="view_count",
            field=models.PositiveIntegerField(
                default=0,
                editable=False,
                help_text="The number of times the game has been viewed.",
            ),
        ),
        migrations.AlterField(
            model_name="game",
            name="webgl_build_zip",
            field=models.FileField(
                help_text="The ZIP file containing the WebGL build of the game.",
                upload_to="game_builds/zips/",
                validators=[
                    django.core.validators.FileExtensionValidator(
                        allowed_extensions=["zip"]
                    )
                ],
            ),
        ),
    ]
