# Generated by Django 5.2 on 2025-05-04 15:12

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of the genre (e.g., Action, Puzzle, Strategy).', max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, help_text='URL-friendly identifier for the genre. Auto-generated if left blank.', max_length=110, unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of the tag (e.g., Multiplayer, Physics, 2D).', max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, help_text='URL-friendly identifier for the tag. Auto-generated if left blank.', max_length=110, unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for the game (UUID).', primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='The title of the game.', max_length=200)),
                ('description', models.TextField(blank=True, help_text='A detailed description of the game.')),
                ('webgl_build_zip', models.FileField(help_text='Upload a ZIP file containing the Unity WebGL build (Build/, TemplateData/, index.html).', upload_to='game_builds/zips/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['zip'])])),
                ('entry_point_path', models.CharField(blank=True, editable=False, help_text="Relative path to the game's entry point (e.g., index.html) after extraction.", max_length=255, null=True)),
                ('thumbnail', models.ImageField(blank=True, help_text='Upload a thumbnail image for the game.', null=True, upload_to='game_thumbnails/')),
                ('is_published', models.BooleanField(default=False, help_text='Is the game visible to the public?')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the game was first added.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the game was last updated.')),
                ('likes_count', models.PositiveIntegerField(default=0, editable=False, help_text='Number of likes the game has received.')),
                ('dislikes_count', models.PositiveIntegerField(default=0, editable=False, help_text='Number of dislikes the game has received.')),
                ('play_count', models.PositiveIntegerField(default=0, editable=False, help_text='Number of times the game has been played (approximate).')),
                ('view_count', models.PositiveIntegerField(default=0, editable=False, help_text='Number of times the game detail page has been viewed.')),
                ('creator', models.ForeignKey(help_text='The user who uploaded this game.', on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_games', to=settings.AUTH_USER_MODEL)),
                ('genres', models.ManyToManyField(blank=True, help_text='Select genres for this game.', related_name='games', to='games.genre')),
                ('tags', models.ManyToManyField(blank=True, help_text='Select tags for this game.', related_name='games', to='games.tag')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
